name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  ci:
    name: Run Tests and generate JaCoCo report
    runs-on: ubuntu-latest
    env:
      SERVER_PORT: 8080

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests
        run: mvn clean verify -Dserver.port=${{ env.SERVER_PORT }} jacoco:report jacoco:report-aggregate

      - name: Save JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: JaCoCo Report
          path: target/site/jacoco/

      - name: Save compiled classes
        uses: actions/upload-artifact@v4
        with:
          name: Compiled Classes
          path: target/classes/
          retention-days: 1

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: ci


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Download JaCoCo Report
        uses: actions/download-artifact@v4
        with:
          name: JaCoCo Report
          path: target/site/jacoco/

      - name: Download compiled classes
        uses: actions/download-artifact@v4
        with:
          name: Compiled Classes
          path: target/classes/

      - name: Compile and Run SonarCloud Analysis
        run: |
          mvn sonar:sonar -Dsonar.projectKey=M-Serral_WordleApp \
                          -Dsonar.organization=m-serral \
                          -Dsonar.host.url=https://sonarcloud.io \
                          -Dsonar.token=${{ secrets.SONARCLOUD_TOKEN }} \
                          -Dsonar.java.binaries=target/classes \
                          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Download Sonar Report
        run: |
          curl -s -u ${{ secrets.SONARCLOUD_TOKEN }} \
          "https://sonarcloud.io/api/measures/component?component=M-Serral_WordleApp&metricKeys=coverage,bugs,vulnerabilities,code_smells" -o sonar_report.json

      - name: Upload Sonar Report
        uses: actions/upload-artifact@v4
        with:
          name: SonarCloud Report
          path: sonar_report.json


  cd:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Get project version from pom.xml
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get Git SHA
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          echo "GIT_SHA=$GIT_SHA" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t mserral/wordleapp:${{ env.VERSION }}-${{ env.GIT_SHA }} .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push mserral/wordleapp:${{ env.VERSION }}-${{ env.GIT_SHA }}